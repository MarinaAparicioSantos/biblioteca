/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clases;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) throws IOException {

		ArrayList<Libro> catalogo = new ArrayList<Libro>();

		while (true) {
			int opcion = menu();
			switch (opcion) {
			case 1:
				// TODO Alta de Libro
				// titulo:isbn:genero:autor:paginas
				alta(catalogo); // HECHO
				break;
			case 2:
				// TODO Lista de Libros
				listaLibros(catalogo); // HECHO
				break;
			case 3:
				baja(catalogo); // HECHO
				break;
			case 4:
				busqueda(catalogo); // HECHO
				break;
			case 5:
				ordenar(catalogo);
				break;
			case 6:
				salvarFichero(catalogo);
				break;
			case 7:
				cargarFichero(catalogo);
				break;
			case 8:
				limpiarCatalogo(catalogo);
				break;
			default:
				break;
			}
		}
	}

	private static int menu() {
		int opcion = 0;

		do {
			System.out.println("Opciones:");
			System.out.println("1. Alta de Libro");
			System.out.println("2. Lista de Libros");
			System.out.println("3. Baja de Libros");
			System.out.println("4. BÃºsqueda de Libros");
			System.out.println("5. Ordenacion de Libros");
			System.out.println("6. Salvar fichero");
			System.out.println("7. Cargar fichero");
			System.out.println("8. Limpiar catálogo.");
			System.out.println("Introduce la opcion:");

			opcion = leerOpcion(8);

		} while (opcion <= 0);

		return opcion;
	}

	private static int leerOpcion(int max) {
		int opcion = -1;
		try {
			Scanner teclado = new Scanner(System.in);
			opcion = teclado.nextInt();
			if (opcion > max)
				opcion = -1;
		} catch (InputMismatchException e) {
			System.out.println("Opcion incorrecta");
		}

		return opcion;
	}

	private static void alta(ArrayList<Libro> catalogo) {
		// Leer de la entrada
		String datosLibro = obtenerDatosLibro();
		// titulo:isbn:genero:autor:paginas
		// Procesar la entrada
		Libro libro = procesaEntrada(datosLibro);
		// Crear el libro con los datos de la entrada
		catalogo.add(libro);
		// Meter el libro en el catalogo

	}

	private static String obtenerDatosLibro() {
		String datos = null;

		boolean validado = false;
		while (!validado) {
			System.out.println("Introduce los datos de un libro.");
			System.out.println("Usa el formato \"titulo:isbn:genero:autor:paginas\"");
			try {
				datos = leerCadena();
				if (true)// Supongo de momento que valida siempre
					validador1(datos);
					validado = true;
			} catch (InputMismatchException e) {
				System.out.println("Datos de entrada no vÃ¡lidos");
			}
		}

		return datos;
	}

	private static Libro procesaEntrada(String entrada) {
		Libro libro = null;

		String[] datos = entrada.split(":");

		String titulo = datos[0];
		String isbn = datos[1];
		Genero genero = Genero.getGenero(datos[2]);
		String autor = datos[3];
		Integer paginas = Integer.parseInt(datos[4]);

		libro = new Libro(titulo, isbn, genero, autor, paginas);

		return libro;
	}

	private static String leerCadena() {
		String opcion = null;
		Scanner teclado = new Scanner(System.in);
		opcion = teclado.nextLine();
		return opcion;
	}

	private static void listaLibros(ArrayList<Libro> catalogo) {


		// principito:2323:novela:marina:100

		int i = 0;
		for (Libro l : catalogo) {
//			System.out.println("Titulo: " + l.getTitulo());
//			System.out.println("isbn: " + l.getIsbn());
//			System.out.println("Genero: " + l.getGenero());
//			System.out.println("Autor: " + l.getAutor());
//			System.out.println("Paginas: " + l.getPaginas());
			System.out.println("Libro en posicion: " + i);
			System.out.println(l);
			i++;

		}

	}

	private static void baja(ArrayList<Libro> catalogo) {
		Scanner teclado = new Scanner(System.in);
		System.out.println("Â¿Cual libro quieres borrar?");
		int libroBorrar = teclado.nextInt();
		catalogo.remove(libroBorrar);

	}


	private static void busqueda(ArrayList<Libro> catalogo) {

		// Pregunta al usuario el ISBN
		String isbn_deseado = "hola";
		Scanner teclado = new Scanner(System.in);
		System.out.print("-Búsqueda rápida-, introduzca el ISBN: ");
		isbn_deseado = teclado.nextLine();


		Libro l = new Libro();
		l.setIsbn(isbn_deseado);

		int posicion = 0;
		posicion = catalogo.indexOf(l);

		// Si está muestra todos los datos del libro
		// Si no está muestra un mensaje diciendo que el libro no está en la lista
		if (posicion < 0) {
			System.out.println("El libro no existe");
		} else {
			// String name = catalogo.get(posicion);
			System.out.println("El libro es: \n" + (catalogo.get(posicion)));
		}
	}

	private static void ordenar(ArrayList<Libro> catalogo) {

		Scanner teclado = new Scanner(System.in);
		System.out.println("Â¿Deseas ordenar por titulo o por numero de paginas?\n");
		String tipo = teclado.next();

		if (tipo.equals("titulo")) {

			Collections.sort(catalogo);

			for (Libro l : catalogo) {
				System.out.println(" ");
				System.out.println(l);
			}
		} else if (tipo.equals("paginas")) {

			Comparator<Libro> comparador = (a, b) -> a.getPaginas().compareTo(b.getPaginas());
			catalogo.sort(comparador);

			for (Libro l : catalogo) {
				System.out.println(" ");
				System.out.println(l);
			}
		}
	}

//	public int compareTo(Libro l) {
//	
//		l.getTitulo();
//        return l.getTitulo().compareTo(l.getTitulo());
//        
//	}

	private static void salvarFichero(ArrayList<Libro> catalogo) throws IOException {

		Scanner teclado = new Scanner(System.in);

		System.out.print("Nombre del fichero que deseas crear: ");

		String nombreFichero = teclado.next();

		FileWriter fichero = new FileWriter(nombreFichero);

		int i = 0;
		for (Libro l : catalogo) {

			fichero.write(l.getTitulo() + "," + l.getIsbn() + "," + l.getGenero() + "," + l.getAutor() + ","
					+ l.getPaginas());
		}

		fichero.close();
	}


	
	
	private static void cargarFichero(ArrayList<Libro> catalogo) {

        Libro libro = null;

        try {

            System.out.println("Introduzca el nombre del archivo a leer");
            Scanner teclado = new Scanner(System.in);
            String respuesta = teclado.next(); // Archivo blas, cambiar a input del usuario


            File myObj = new File(respuesta);//
            Scanner myReader = new Scanner(myObj);//

            System.out.println("El fichero ha sido cargado.");

            while (myReader.hasNextLine()) {

                // System.out.println(myObj);

                String line = myReader.next();
                String[] datos = line.split(",");

                String titulo = datos[0];
                String isbn = datos[1];
                Genero genero = Genero.getGenero(datos[2]);
                String autor = datos[3];
                Integer paginas = Integer.parseInt(datos[4]);

                libro = new Libro(titulo, isbn, genero, autor, paginas);
                catalogo.add(libro);

                // EL PRIMER LIBRO NO SE IMPRIME --- ARREGLAR
                while (myReader.hasNextLine()) {
                    String data = myReader.nextLine();
                    System.out.println(data);
                }
            }
            myReader.close();
        } catch (FileNotFoundException e) {
            System.out.println("Error del programa, vuelva al menú.");
            e.printStackTrace();
        }
    }
    

	private static void limpiarCatalogo(ArrayList<Libro> catalogo) {

		catalogo.clear();

		System.out.println("Catalogo borrado.");

	}
	
	private static boolean validador1(String validar) {
		
		return validar.matches("[\\w-]+:[0-9]+:NOVELA|POESIA|FICCION:[\\w-]+:[0-9]+");
	}
	


}
